buildscript {
    repositories {
        flatDir { dirs 'libs' }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://plugins.gradle.org/m2/' }
        //maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath 'de.aaschmid:gradle-cpd-plugin:1.0'
    }
}

plugins {
    id "com.eriwen.gradle.js" version "2.14.1" apply false
}
configurations.all {
    resolutionStrategy {
        // 동일 모듈에 대한 버전 충돌시 즉시 오류 발생하고 실패.
        failOnVersionConflict()

        // 특정 모듈의 버전을 강제 지정(최상위건 이행적 의존성이건 무관함)
        // force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
        // 이미 강제 지정된 모듈 버전을 대체함
        // forcedModules = ['asm:asm-all:3.3.1']

        // 동적 버전 탐색을 10분 캐시
        cacheDynamicVersionsFor 10, 'minutes'
        // 변하는 모듈(Changing Module)을 캐시하지 않음
        cacheChangingModulesFor 0, 'seconds'
    }
}


configure(allprojects) {
    ext.gradleScriptDir = "${rootProject.projectDir}/gradle"

    apply plugin: 'base'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'

    // apply from: "${gradleScriptDir}/ide-jdt.gradle"
}


configure(rootProject) {
    configurations.archives.artifacts.clear()

    task wrapper(type: Wrapper) {
        gradleVersion = '4.0'
    }
}


configure(subprojects) { subproject ->
    ext.lombokVersion = '1.16.16'
    ext.servletVersion = '3.0.1'
    ext.jspVersion = '2.3.1'
    ext.elVersion = '3.0.0'
    ext.jstlVersion = '1.2'
    ext.springVersion = '4.3.9.RELEASE'
    ext.springSecurityVersion = '4.2.3.RELEASE'
    ext.aspectjVersion = '1.8.10'
    ext.slf4jVersion = '1.7.25'
    ext.logbackVersion = '1.2.2'
    ext.janinoVersion = '3.0.7'
    ext.mybatisVersion = '3.4.4'
    ext.mybatisSpringVersion = '1.3.0'
    ext.commonsLangVersion = '3.3.2'
    ext.commonsIoVersion = '2.5'
    ext.snakeyamlVersion = '1.18'
    ext.dbcpVersion = '2.1.1'
    ext.esapiVersion = '2.1.0.1'
    ext.jsoupVersion = '1.10.3'
    ext.swaggerVersion = '2.6.1'
    ext.jackson2Version = '2.8.9'
    ext.commonsCodecVersion = '1.9'
    ext.httpclientVersion = '4.5.3'
    ext.vcommerceCommonsVersion = '0.0.1.BUILD-SNAPSHOT'
    ext.sitemeshVersion = '3.0.1'
    ext.mysqlVersion = '5.1.38'
    ext.hibernateValidVersion = '5.1.3.Final'
    ext.pageHelperVersion = '5.0.4'
    ext.guavaVersion = '22.0'

    apply plugin: 'pmd'
    apply plugin: 'de.aaschmid.cpd'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'

    buildDir = 'target'

    repositories {
        flatDir { dirs 'libs' }
        jcenter()
        mavenCentral()
        mavenLocal()
    }


    dependencies {
        compile group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
        compile group: 'org.springframework', name: 'spring-core', version: springVersion
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0'

        //compile group: 'commerce', name: 'commerce-utility', version: '0.0.1.BUILD-SNAPSHOT'
        //compile git(url: 'http://gitlab.coocha.co.kr/pg_commerce/v-commerce-certification.git', branch: 'master')

        testCompile 'junit:junit:4.11'
    }

    compileJava.options*.compilerArgs = [
            '-Xlint:serial', '-Xlint:varargs', '-Xlint:cast', '-Xlint:classfile',
            '-Xlint:dep-ann', '-Xlint:divzero', '-Xlint:empty', '-Xlint:finally',
            '-Xlint:overrides', '-Xlint:path', '-Xlint:-processing', '-Xlint:static',
            '-Xlint:try', '-Xlint:fallthrough', '-Xlint:rawtypes', '-Xlint:deprecation',
            '-Xlint:unchecked', '-Xlint:-options'
    ]

    compileTestJava.options*.compilerArgs = [
            '-Xlint:serial', '-Xlint:-varargs', '-Xlint:cast', '-Xlint:classfile',
            '-Xlint:dep-ann', '-Xlint:divzero', '-Xlint:empty', '-Xlint:finally',
            '-Xlint:overrides', '-Xlint:path', '-Xlint:-processing', '-Xlint:static',
            '-Xlint:try', '-Xlint:-fallthrough', '-Xlint:-rawtypes', '-Xlint:-deprecation',
            '-Xlint:-unchecked', '-Xlint:-options'
    ]

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    pmdMain {
        ignoreFailures = false
        ruleSetFiles = files("${rootProject.projectDir}/src/inspection-rules.xml")
        reports {
            xml.enabled = true
        }
    }

    cpd {
        language = 'java'
        toolVersion = '5.6.1'
        encoding = 'UTF-8'
        ignoreFailures = false
        minimumTokenCount = 100
    }

    cpdCheck {
        reports {
            xml.enabled = true
        }
        source = sourceSets.main.allJava
    }

    checkstyle.toolVersion = '8.0'
    checkstyleTest.enabled = false
    checkstyleMain {
        ignoreFailures = false
        configFile = file("${rootProject.projectDir}/src/checkstyle-config.xml")
        reports {
            xml.enabled = true
        }
        source = sourceSets.main.allJava
    }

    findbugs {
        ignoreFailures = false
    }

    findbugsMain {
        effort = 'min'
        reportLevel = 'high'
        reports {
            xml.enabled = true
            html.enabled = !xml.enabled
        }
        source = sourceSets.main.allJava
    }

    sourceSets {
        main {
            java {
                srcDir 'src/java'
            }
        }
        test {
            java {
                srcDir 'test/java'
            }
        }
    }
}


project(":${rootProject.name}-model") {
    apply plugin: 'java'

    dependencies {
        compile group: 'org.mybatis', name: 'mybatis', version: mybatisVersion
        compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernateValidVersion
    }
} // end :model


project(":${rootProject.name}-service") {
    apply plugin: 'java'

    dependencies {
        compile project(":${rootProject.name}-model")
        compile project(":${rootProject.name}-utility")
        compile project(":${rootProject.name}-security")
        compile group: 'org.springframework', name: 'spring-context', version: springVersion
        compile group: 'org.springframework', name: 'spring-tx', version: springVersion
    }
} // end :service


project(":${rootProject.name}-web") {

    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'js'
    //apply plugin: "com.eriwen.gradle.js"

    dependencies {
        compile project(":${rootProject.name}-service")
        compile group: 'org.springframework', name: 'spring-web', version: springVersion
        compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
        compile group: 'org.springframework', name: 'spring-jdbc', version: springVersion
        compile group: 'org.springframework', name: 'spring-tx', version: springVersion
        compile group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion
        compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: springSecurityVersion

        compile group: 'org.mybatis', name: 'mybatis', version: mybatisVersion
        compile group: 'org.mybatis', name: 'mybatis-spring', version: mybatisSpringVersion

        compile group: 'org.sitemesh', name: 'sitemesh', version: sitemeshVersion
        compile group: 'org.apache.commons', name: 'commons-dbcp2', version: dbcpVersion
        compile group: 'org.apache.httpcomponents', name: 'httpclient', version: httpclientVersion
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson2Version
        compile group: 'com.oakfusion', name: 'spring-cookie-session', version: '1.+'
        compile group: 'com.h2database', name: 'h2', version: '1.4.195'

        runtime group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
        runtime group: 'org.codehaus.janino', name: 'janino', version: janinoVersion
        runtime group: 'org.yaml', name: 'snakeyaml', version: snakeyamlVersion
        runtime group: 'javax.servlet', name: 'jstl', version: jstlVersion

        compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: servletVersion
        compileOnly group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: jspVersion
        compileOnly group: 'javax.el', name: 'javax.el-api', version: elVersion

        runtime group: 'mysql', name: 'mysql-connector-java', version: mysqlVersion

        testCompile 'junit:junit:4.11'
    }
} // end :web

project(":${rootProject.name}-security") {
    apply plugin: 'java'
    apply plugin: 'maven'

    dependencies {
        compile project(":${rootProject.name}-utility")
        compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
    }
}

project(":${rootProject.name}-utility") {
    apply plugin: 'java'
    apply plugin: 'maven'

    dependencies {
        provided group: 'org.springframework', name: 'springloaded', version: '1.2.7.RELEASE'

        compile group: 'com.google.guava', name: 'guava', version: guavaVersion
        compile group: 'org.apache.commons', name: 'commons-lang3', version: commonsLangVersion
        compile group: 'commons-io', name: 'commons-io', version: commonsIoVersion
        compile group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
        compile group: 'com.google.guava', name: 'guava', version: guavaVersion
        compile group: 'org.owasp.esapi', name: 'esapi', version: esapiVersion
        compile group: 'org.jsoup', name: 'jsoup', version: jsoupVersion
        compile group: 'org.mybatis', name: 'mybatis', version: mybatisVersion
        compile group: 'org.mybatis', name: 'mybatis-spring', version: mybatisSpringVersion
        compile group: 'com.github.pagehelper', name: 'pagehelper', version: pageHelperVersion

        compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion

        compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: servletVersion
        compileOnly group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: jspVersion
    }

    //Commons 모듈에서 호출해서 이 모듈에 올리는게 아닌, 여기에서 바로 만들고 부르는것이기 때문에 파일을 올릴 필요가 없음
//    uploadArchives {
//        repositories {
//            mavenDeployer {
//                repository(url: 'http://58.229.122.78:9090/nexus/content/repositories/snapshots/')
//                pom.version = project.version
//                pom.artifactId = project.name
//                pom.groupId = project.group
//            }
//        }
//    }

}
